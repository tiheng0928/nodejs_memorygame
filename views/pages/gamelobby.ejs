<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<% include ../partials/head %>
	<title>遊戲大廳</title>
	<script>
		var socket = io.connect();
		var user_id;
		var joined_player;
		var enter_id = 0;
		var currentUserId;
       	var	userName;
        var email;
		var player_id;
		var turn_id;
		var now_turn;
		var buttonid = new Array(); //藉由buttonid去存放按過的牌的id
		var buttonval = new Array();//藉由buttonval去存放按過的牌的值
		var clickcount = 0;
		var PK = 0;
		var allCardVal = new Array();//存所有牌值的陣列
		var cd = 1 ;
		var point = 0;
		var combo = 0;
		var game_over = new Array();//存資料庫牌狀態的陣列
		var false_num = 0; //資料庫狀態牌的數量
		var a = 0;
		var username;
		var playing_player = 0;
		var countdown_t = 10;
		var time_count;
		var winner;

		firebase.auth().onAuthStateChanged(function (user) {
        if (user) {
            currentUserId = user.uid;
       		userName = user.displayName;
            email = user.email;
            console.log(userName);
            console.log(currentUserId);
        }
    });

	</script>
</head>

<body>
	<div class="background">
		<input type="button" id="logout" onclick='logout()' value="登出">
		<div class="result">
			<div class="result_window">
			</div>
		</div>
		<div class="wrap">
			<div class="header">
				<h1 class="h1">遊戲大廳</h1>
				<h1 id='enter_h1'>記憶小遊戲</h1>
			</div>
			<div class="content">
				<div class="room_area">
					<div class="room">
						<li><img src="image/player.png" id="player_1"></li>
						<li><img src="image/player.png" id="player_2"></li>
						<li><img src="image/player.png" id="player_3"></li>
						<li><img src="image/player.png" id="player_4"></li>
						<div class="clear"></div>
						<input type="checkbox" id="join"><button type="submit" class="join_disable" disabled="disabled">房間已滿!</button><br>
						<button type="submit" id="play_btn" class="play" disabled="disabled">Play!</button>
					</div>
					<div class="rule">
						<h4>***規則說明***</h4>
						<p>1. 4人遊玩</p>
						<p>2. 翻開數字一樣的牌即可獲得10分</p>
						<p>3. 翻對的話可再翻一次，直至翻到兩張不同的牌為止</p>
						<p>4. 當牌全部翻完後結束遊戲</p>
					</div>
					<script>
						socket.emit('add user');
						socket.on('usernum',function(user_num){
							console.log('現在人數:'+user_num);
							console.log('hello?');
							$('.msg_area h2').html('目前在線人數：'+user_num);
						});
						//socket.on('check_list_num');

						$( document ).on( "click", "#join", function(){
							if($("#join").prop("checked")){					
								socket.emit('player_num_plus',user_id);
							}

							else{
								socket.emit('player_num_del',user_id);
							}
						});	
						
						socket.on('get_user_id',function(userID){
							console.log('socketID:'+userID);
							user_id = userID;
						});

						socket.on('check_player_num',function(room){
								joined_player = room.playernum;
								switch(room.playernum){
									case 0:
										$("#player_1").attr("src","image/player.png");
										$("#player_2").attr("src","image/player.png");
										$("#player_3").attr("src","image/player.png")
										$("#player_4").attr("src","image/player.png")
										console.log('case0');
										break;
									case 1:
										$("#player_1").attr("src","image/player_joined.png");
										$("#player_2").attr("src","image/player.png");
										$("#player_3").attr("src","image/player.png")
										$("#player_4").attr("src","image/player.png")
										console.log('case1');
										break;
									case 2:
										$("#player_1").attr("src","image/player_joined.png");
										$("#player_2").attr("src","image/player_joined.png");
										$("#player_3").attr("src","image/player.png")
										$("#player_4").attr("src","image/player.png")
										console.log('case2');
										break;
									case 3:
										$("#player_1").attr("src","image/player_joined.png");
										$("#player_2").attr("src","image/player_joined.png");
										$("#player_3").attr("src","image/player_joined.png")
										$("#player_4").attr("src","image/player.png")
										console.log('case3');
										break;
									case 4:
										$("#player_1").attr("src","image/player_joined.png")
										$("#player_2").attr("src","image/player_joined.png")
										$("#player_3").attr("src","image/player_joined.png")
										$("#player_4").attr("src","image/player_joined.png")
										console.log('case4');
										break;					
								}
						});//End
						socket.on('set_enter_id',function(room){
							enter_id = room.enter_id;
						});
						socket.on('full_result',function(){
							if(enter_id == 1){
								document.getElementById("play_btn").disabled = false;
							}
							else{
								$("#join").hide();
								$(".join_disable").show();
								$("#play_btn").attr("disabled","disabled");
							}
						});

						socket.on('empty_result',function(room){
							if(enter_id == 1){
								$("#play_btn").attr("disabled","disabled");
							}
							else{
								$("#join").show();
								$(".join_disable").hide();
								$("#play_btn").attr("disabled","disabled");						
							}
						});

					</script>
				</div>

				<div class="game_area">
					<div class="game">
						<ul>
							<li><button onClick="reply_clickid(this.id)" class='button' id='1'></button></li>
							<li><button onClick="reply_clickid(this.id)" class='button' id='2'></button></li>
							<li><button onClick="reply_clickid(this.id)" class='button' id='3'></button></li>
							<li><button onClick="reply_clickid(this.id)" class='button' id='4'></button></li>
							<li><button onClick="reply_clickid(this.id)" class='button' id='5'></button></li>
							
						</ul>
						<ul>
							<li><button onClick="reply_clickid(this.id)" class='button' id='6'></button></li>
							<li><button onClick="reply_clickid(this.id)" class='button' id='7'></button></li>
							<li><button onClick="reply_clickid(this.id)" class='button' id='8'></button></li>
							<li><button onClick="reply_clickid(this.id)" class='button' id='9'></button></li>
							<li><button onClick="reply_clickid(this.id)" class='button' id='10'></button></li>
						</ul>
						<ul>
							<li><button onClick="reply_clickid(this.id)" class='button' id='11'></button></li>
							<li><button onClick="reply_clickid(this.id)" class='button' id='12'></button></li>
							<li><button onClick="reply_clickid(this.id)" class='button' id='13'></button></li>
							<li><button onClick="reply_clickid(this.id)" class='button' id='14'></button></li>
							<li><button onClick="reply_clickid(this.id)" class='button' id='15'></button></li>
						</ul>
						<ul>
							<li><button onClick="reply_clickid(this.id)" class='button' id='16'></button></li>
							<li><button onClick="reply_clickid(this.id)" class='button' id='17'></button></li>
							<li><button onClick="reply_clickid(this.id)" class='button' id='18'></button></li>
							<li><button onClick="reply_clickid(this.id)" class='button' id='19'></button></li>
							<li><button onClick="reply_clickid(this.id)" class='button' id='20'></button></li>						
						</ul>
					</div>
					
					<div class="wait">
						<p>還沒輪到你~</p>
					</div>
					<div id="countdown"></div>
				</div>

				<!--倒數計時-->
				
				<script>
					//回復20張牌的狀態
					for(var i = 1 ; i <= 20 ; i++) {	
						Database.ref('Cards/' +i).update({
							'cards_status': true
						});
					}

					function reply_clickid(clicked_id){
						console.log('clicked_id:' +clicked_id);
						console.log('this is buttonid: '+buttonid)
						clickcount++;

						firebase.database().ref('Cards/'+clicked_id).on('value', function(snapshot) {
							if(clickcount == 1){
								
								buttonid[0] = clicked_id;
								buttonval[0] = snapshot.val().cards_value;
								console.log('this is buttonval: ' +buttonval);
								socket.emit("click_card",clicked_id);

							}else if(clickcount==2){
	
								buttonid[1] = clicked_id;
								buttonval[1] = snapshot.val().cards_value;
								socket.emit("click_card",clicked_id);
								//判斷牌的value是否一樣
								if(buttonval[0] == buttonval[1]) {
									document.getElementById('countdown').innerHTML= "恭喜翻對了!!請繼續。  您還有"+countdown_t+"秒";
									//通知所有玩家，並將牌disable，此玩家繼續
									socket.emit('same_value_a',buttonid[0],buttonid[1],buttonval[0],buttonval[1]);		
								}
								else{
									//停止計時
									stopShowTime();
									document.getElementById('countdown').innerHTML= "您翻錯了，換人囉ㄎㄎㄎㄎㄎ!!!!!";
									//通知所有玩家，牌的狀態不變，玩家換人
									socket.emit('different_value_a',buttonid[0],buttonid[1],buttonval[0],buttonval[1]);
									socket.emit('add_turn');											
								}
								clickcount = 0;
							}	
						});
					}

					//觸發所有人翻一張牌
					socket.on('turn_card',function (clicked_id){
						$('#'+clicked_id).attr("disabled","disabled");
						$('#'+clicked_id).html('<p>'+allCardVal[clicked_id-1]+'</p>');
					});
					//將所有排的val存在此陣列
					
						for ( cd = 1 ; cd<=20 ; cd++){
							firebase.database().ref('Cards/'+cd+'/cards_value').on('value', function(hihihi) {
								allCardVal.push(hihihi.val());
								console.log('allCardVal: '+allCardVal);
							});
						}
					
					socket.on('same_value_b',function(btn_id_1,btn_id_2,btn_val_1,btn_val_2) {    //玩家改寫資料庫牌狀態為false
						buttonid[0] = btn_id_1;
						buttonid[1] = btn_id_2;
						buttonval[0] = btn_val_1;
						buttonval[1] = btn_val_2;
						//combo++;
						console.log('翻出的牌為'+buttonid[0]+'號牌: '+buttonval[0]+' & '+buttonid[1]+'號牌: '+buttonval[1]);
						Database.ref('Cards/' +btn_id_1).update({
							'cards_status': false
						});
						Database.ref('Cards/' +btn_id_2).update({
							'cards_status': false
						});

						if(player_id == now_turn){
							point = point+10;
							console.log(user_id);
							socket.emit('send_point',user_id,point);
						}
						
						socket.emit('add_false_num');
						check_end();
						buttonid.length = 0;
						buttonval.length = 0;
					});

					socket.on('different_value_b',function(btn_id_1,btn_id_2,btn_val_1,btn_val_2) {
						console.log('翻出的牌為'+btn_id_1+'號牌: '+btn_val_1+' & '+btn_id_2+'號牌: '+btn_val_2);
						console.log('牌值不同，換人翻牌.');
						$('#'+btn_id_1).delay(100).queue(function(next) { $(this).attr("disabled",false); next();});

						$('#'+btn_id_1).delay(100).queue(function(next) { $(this).html(""); next();});

						$('#'+btn_id_2).delay(100).queue(function(next) { $(this).attr("disabled",false); next();});
						$('#'+btn_id_2).delay(100).queue(function(next) { $(this).html(""); next();});

						buttonid.length = 0;
						buttonval.length = 0;
					});

					socket.on('show_combo',function(combo_num){
						$(".combo").fadeIn(300);
						$(".combo_num").html("<b> "+combo_num+" !!!</b>");
						$(".combo").delay(600).fadeOut(300);
						console.log("Yo");
					});

					$('#play_btn').click(function(){
						$('.room_area').hide();
						$('.h1').hide();
						$('.msg_area').hide();
						$('.game_area').show();
						$('#enter_h1').show();
						$('.msg_area2').show();
						socket.emit('get_id',currentUserId,user_id);
						socket.on('give_id',function(room){
							player_id = room.player_id;
							console.log('player_id:'+player_id);
							socket.emit('link_player',user_id,player_id);
						});
						socket.on('getFB_ID',function(display_user){
							if(display_user.length == 4){
								for(var i = 0 ; i < 4 ; i++){	
									firebase.database().ref('users/'+display_user[i]).on('value', function(getname) {
										console.log(getname.val().username);
										username = getname.val().username;
										console.log('username：'+username);

										$("#user_"+i).html("<b>"+username+":</b>");
										console.log('after css username:'+username);
									});
									
								}
							}
						});
						socket.emit('send_point',user_id,point);
						console.log('分數:'+point);

						socket.emit('plus_playing_player',playing_player);

					});

					//plus_playing_player(接收sever傳回來的playing_player)
					socket.on('plus_playing_player_a', function(playing_player) {
						playing_player = playing_player;
						console.log('playing_player: '+playing_player);
					});


					////中途有人離開遊戲，遊戲停止
					socket.on('someone_depart', function() {
						$('.button').attr("disabled","disabled");
						socket.emit('gameover_someone');
					});

					//人數滿4人，開始倒數計時
					socket.on('start_countdown', function() {
						if(player_id == now_turn){
							countdown_t = 10;
							showTime();
						}
					});

					function showTime() {
						stopShowTime();
						if(countdown_t>0 ){
							countdown_t -= 1;
	   					 	document.getElementById('countdown').innerHTML= "現在是您的回合，時間還剩下"+countdown_t+"秒";
	    
	    					if(countdown_t==0){
	    						document.getElementById('countdown').innerHTML= "沒有考慮那麼久的啦!! 換人!!!";
	    						if(clickcount==1){
	        						socket.emit('timeout_recovery_a',buttonid[0]);
	        					}
	        					socket.emit('add_turn');
	   	 					}
	    					//每秒執行一次,showTime()
	    					time_count = setTimeout("showTime()",1000);
						}
					}

					function stopShowTime() {
						clearTimeout(time_count);
					}

					socket.on('timeout_recovery_b',function(card_recover){
						$('#'+card_recover).delay(100).queue(function(next) { $(this).attr("disabled",false); next();});

						$('#'+card_recover).delay(100).queue(function(next) { $(this).html(""); next();});

					});

					socket.on('set_turn_id',function(room){
						turn_id = room.turn_id;
						console.log('現在排隊號碼是:'+turn_id);
					});

					socket.on('check_turn_id',function(room){
						turn_id = room.turn_id;
						now_turn = turn_id%4;
						console.log(now_turn);
						if(player_id == now_turn){
							$('.wait').fadeOut(500);
						}
						else{
							$('.wait').fadeIn(500);
						}
						for(var i=0;i<4;i++){
							if(i == now_turn){
								$("#point_"+i).css("background","#3185FC");
								$("#point_"+i).css("color","#fff");
							}
							else{
								$("#point_"+i).css("background","#fff");
								$("#point_"+i).css("color","black");
							}
						}
					});

					socket.on('show_point',function(player_point){
						a++;
						console.log('a='+a);
						for(i=0;i<player_point.length;i++){
							console.log('player_'+i+':'+player_point[i]);
							$("#point_"+i).html("<p>"+player_point[i]+"</p>");
						}				
					});
							
					function check_end(){
						socket.emit('ask_false_num');
						socket.on('now_false_num',function(falsenum){
							false_num = falsenum;
							if(false_num != 20){
								console.log('現在資料庫內false數量為：'+ false_num);
							}else{				
								console.log('現在資料庫內false數量為：'+ false_num);
								socket.emit('readtogameover');
							}
						})
					
					}	
					
					socket.on('do_gameover', function(){   //呼叫遊戲結束
						stopShowTime();
						document.getElementById('countdown').innerHTML= "快樂的時光總是過得特別快。遊戲結束，即將返回首頁";
						//false_num = 0;
						game_over = [];
						socket.emit('show_result');
						socket.emit('gameover');
						console.log('變數重置完成');
					});

					socket.on('show_winner',function(winner_id,win_point){
						firebase.database().ref('users/'+winner_id).on('value', function(getname) {
							winner = getname.val().username;
						});
						$(".result").fadeIn(300);
						$(".result_window").html("<p>恭喜"+winner+"獲勝!!!</p>");
					});

					socket.on('returnindex', function(){

						//五秒後跳全體跳回首頁並歸0
						socket.emit('clear_0');
						enter_id = 0;

						setTimeout(function(){ 
							window.location.replace('http://fb-nodejs-pokergame.herokuapp.com/gamelobby');
							$(".result").hide();
						}, 5000);
						//combo = 0;
						
						for(i=0;i<4;i++){
							$("#point_"+i).html("<p>0</p>");
						}

					});

					socket.on('clear_all',function(player_point,clear_player,clear_enter){
						player_id = clear_player;
						enter_id = clear_enter;
						//combo = 0;
						for(i=0;i<player_point.length;i++){
							console.log('player_'+i+':'+player_point[i]);
							$("#point_"+i).html("<p>"+player_point[i]+"</p>");
						}
					});


					function logout(){

        				Database.ref('users/' + currentUserId).remove();
        				firebase.auth().signOut().then(function() {
  							console.log('Signed Out');
						}, function(error) {
  							console.error('Sign Out Error', error);
						});
            
            			window.location.replace('http://fb-nodejs-pokergame.herokuapp.com/');
            			//window.location.replace('http://localhost:3000/');		
						}
				
				</script>
				<div class="msg_area">
					<h2>目前線上人數：</h2>
					<script>
						firebase.auth().onAuthStateChanged(function (user) {
	        				if (user) {
	           					currentUserId = user.uid;
	       						userName = user.displayName;
	            				Database.ref('users/' + currentUserId).once('value').then(function(snapshot) {
									var cc = snapshot.val().username;
									console.log('currentUserId:'+currentUserId);
	        						console.log('使用者姓名：'+cc);
	        						$('.msg_area').append('<h3>歡迎：'+cc+ '</h3>');
	        					});
	        				}else{
	        					window.location.replace('http://fb-nodejs-pokergame.herokuapp.com/');
	        				}
	    				});       		
	        		</script>
				</div>
				<div class="msg_area2">
					<p>計分表</p>
					<hr>
					<b id ='user_1'></b> <div id="point_0"></div>
					<b id ='user_2'></b> <div id="point_1"></div>
					<b id ='user_3'></b> <div id="point_2"></div>
					<b id ='user_4'></b> <div id="point_3"></div>
					
				</div>
			</div>			
		</div>
	</div>
</body>
</html>